services:
  # MongoDB数据库
  mongodb:
    image: mongo:6.0
    container_name: mule-cloud-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: mule_cloud
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - mule-cloud-network

  # Redis缓存
  redis:
    image: redis:7.0-alpine
    container_name: mule-cloud-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass "redis123"
    volumes:
      - redis_data:/data
    networks:
      - mule-cloud-network

  # Consul服务发现
  consul:
    image: consul:1.15
    container_name: mule-cloud-consul
    restart: unless-stopped
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: consul agent -dev -client=0.0.0.0 -ui
    networks:
      - mule-cloud-network

  # NATS消息队列
  nats:
    image: nats:2.9-alpine
    container_name: mule-cloud-nats
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"
    command: "--jetstream --http_port 8222"
    networks:
      - mule-cloud-network

  # 用户服务
  user-service:
    build:
      context: .
      dockerfile: deployments/user-service/Dockerfile
    container_name: mule-cloud-user-service
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - MULE_CLOUD_SERVER_HOST=0.0.0.0
      - MULE_CLOUD_SERVER_PORT=8001
      - MULE_CLOUD_DATABASE_MONGODB_URI=mongodb://admin:password123@mongodb:27017/mule_cloud?authSource=admin
      - MULE_CLOUD_REDIS_HOST=redis
      - MULE_CLOUD_REDIS_PASSWORD=redis123
      - MULE_CLOUD_CONSUL_ADDRESS=consul:8500
      - MULE_CLOUD_NATS_URL=nats://nats:4222
      - MULE_CLOUD_JWT_SECRET_KEY=mule-cloud-production-secret-key
    depends_on:
      - mongodb
      - redis
      - consul
      - nats
    networks:
      - mule-cloud-network
    volumes:
      - ./configs:/app/configs:ro

  # 基础数据服务
  master-data-service:
    build:
      context: .
      dockerfile: deployments/master-data-service/Dockerfile
    container_name: mule-cloud-master-data-service
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      - MULE_CLOUD_SERVER_HOST=0.0.0.0
      - MULE_CLOUD_SERVER_PORT=8002
      - MULE_CLOUD_DATABASE_MONGODB_URI=mongodb://admin:password123@mongodb:27017/mule_cloud?authSource=admin
      - MULE_CLOUD_REDIS_HOST=redis
      - MULE_CLOUD_REDIS_PASSWORD=redis123
      - MULE_CLOUD_CONSUL_ADDRESS=consul:8500
      - MULE_CLOUD_NATS_URL=nats://nats:4222
      - MULE_CLOUD_JWT_SECRET_KEY=mule-cloud-production-secret-key
    depends_on:
      - mongodb
      - redis
      - consul
      - nats
    networks:
      - mule-cloud-network
    volumes:
      - ./configs:/app/configs:ro

  # API网关
  gateway:
    build:
      context: .
      dockerfile: deployments/gateway/Dockerfile
    container_name: mule-cloud-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - GATEWAY_PORT=8080
      - CONSUL_ADDRESS=consul:8500
      - USER_SERVICE_URL=http://user-service:8001
      - MASTER_DATA_SERVICE_URL=http://master-data-service:8002
    depends_on:
      - consul
      - user-service
      - master-data-service
    networks:
      - mule-cloud-network

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: mule-cloud-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./deployments/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - mule-cloud-network

  # Grafana监控面板
  grafana:
    image: grafana/grafana:latest
    container_name: mule-cloud-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployments/monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - mule-cloud-network

# 网络配置
networks:
  mule-cloud-network:
    driver: bridge

# 数据卷
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
