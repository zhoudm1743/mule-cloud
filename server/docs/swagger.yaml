basePath: /api
definitions:
  dto.AdminCreateReq:
    properties:
      avatar:
        type: string
      nickname:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        items:
          type: string
        type: array
      status:
        type: integer
    required:
    - avatar
    - nickname
    - phone
    type: object
  dto.AdminListResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/dto.PageResp'
      msg:
        example: 成功
        type: string
    type: object
  dto.AdminUpdateReq:
    properties:
      avatar:
        type: string
      id:
        type: string
      nickname:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        items:
          type: string
        type: array
      status:
        type: integer
    required:
    - avatar
    - id
    - nickname
    - phone
    type: object
  dto.EmptyDataResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          type: string
        type: array
      msg:
        example: 成功
        type: string
    type: object
  dto.ErrorResponse:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  dto.IdReq:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  dto.LoginReq:
    properties:
      password:
        type: string
      phone:
        type: string
    required:
    - password
    - phone
    type: object
  dto.LoginResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      msg:
        example: 成功
        type: string
    type: object
  dto.PageResp:
    properties:
      count:
        description: 总数
        type: integer
      lists:
        description: 数据
      pageNo:
        description: 页No
        type: integer
      pageSize:
        description: 每页Size
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Mule Cloud 后端API接口文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Mule Cloud API
  version: "1.0"
paths:
  /admin/system/admin:
    delete:
      consumes:
      - application/json
      description: 根据ID删除管理员
      parameters:
      - description: 管理员ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/dto.IdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/dto.EmptyDataResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 删除管理员
      tags:
      - 管理员管理
    get:
      consumes:
      - application/json
      description: 分页获取管理员列表，支持按手机号、昵称、状态筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 手机号
        in: query
        name: phone
        type: string
      - description: 昵称
        in: query
        name: nickname
        type: string
      - description: 状态
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 管理员列表
          schema:
            $ref: '#/definitions/dto.AdminListResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取管理员列表
      tags:
      - 管理员管理
    post:
      consumes:
      - application/json
      description: 创建新的管理员账号
      parameters:
      - description: 管理员信息
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/dto.AdminCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            $ref: '#/definitions/dto.EmptyDataResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 创建管理员
      tags:
      - 管理员管理
    put:
      consumes:
      - application/json
      description: 更新管理员信息
      parameters:
      - description: 管理员信息
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/dto.AdminUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/dto.EmptyDataResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新管理员
      tags:
      - 管理员管理
  /api/admin/auth/login:
    post:
      consumes:
      - application/json
      description: 管理员登录接口，验证手机号和密码
      parameters:
      - description: 登录信息
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功，返回token
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: 系统错误
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: 管理员登录
      tags:
      - 认证
  /health:
    get:
      consumes:
      - application/json
      description: 检查服务是否正常运行
      produces:
      - application/json
      responses:
        "200":
          description: 服务正常
          schema:
            additionalProperties: true
            type: object
      summary: 健康检查
      tags:
      - 系统
  /status:
    get:
      consumes:
      - application/json
      description: 获取应用状态信息
      produces:
      - application/json
      responses:
        "200":
          description: 应用状态信息
          schema:
            additionalProperties: true
            type: object
      summary: 状态检查
      tags:
      - 系统
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
